---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by 20106.
--- DateTime: 2022/10/31 15:55
---

print("Hello Lua World")
function f1(var)
    if var <= 1 then
        return 1
    end
    return f1(var - 1) + var;
end

print("求和: "..f1(100))
list = { 9, 2, 1, 7, 4, 6, 2 }
function f2()
    for i = 1, #list - 1 do
        for j = i + 1, #list do
            if list[i] > list[j] then
                value = list[i]
                list[i] = list[j]
                list[j] = value
            end
        end
    end
end

function print_my(list)
    str = " "
    for i = 1, #list do
        str = str .. list[i] .. " "
    end
    return str;
end

print("排序之前" .. print_my(list))
f2()
print("排序之后" .. print_my(list))



function foo (a)
    print("foo 函数输出", a)
    return coroutine.yield(2 * a) -- 返回  2*a 的值
end
co = coroutine.create(function (a , b)
    print("第一次协同程序执行输出", a, b) -- co-body 1 10
    local r = foo(a + 1)
    print("第二次协同程序执行输出", r)
    local r, s = coroutine.yield(a + b, a - b)  -- a，b的值为第一次调用协同程序时传入
    print("第三次协同程序执行输出", r, s)
    return b, "结束协同程序"                   -- b的值为第二次调用协同程序时传入
end)
print("main", coroutine.resume(co, 1, 10)) -- true, 4
print("--分割线----")
print("main", coroutine.resume(co, "r")) -- true 11 -9
print("---分割线---")
print("main", coroutine.resume(co, "x", "y")) -- true 10 end
print("---分割线---")
print("main", coroutine.resume(co, "x", "y")) -- cannot resume dead coroutine
print("---分割线---")

